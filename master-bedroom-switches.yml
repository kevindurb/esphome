---
substitutions:
  name: master-bedroom-switches
  friendly_name: Master Bedroom Switches
  area: Master Bedroom
  static_ip: 192.168.137.2

packages:
  - !include common/base.yml
  - !include common/wifi.yml
  - !include common/shelly.yml

i2c:
  sda: GPIO12
  scl: GPIO14

sensor:
  - platform: ade7953_i2c
    irq_pin: GPIO16 # Prevent overheating by setting this
    voltage:
      name: ${friendly_name} Voltage
    # On the Shelly 2.5 channels are mixed ch1=B ch2=A
    current_a:
      name: ${friendly_name} Current B
    current_b:
      name: ${friendly_name} Current A
    active_power_a:
      name: ${friendly_name} Active Power B
      # active_power_a is normal, so don't multiply by -1
    active_power_b:
      name: ${friendly_name} Active Power A
      # active_power_b is inverted, so take the absolute value
      filters:
        - lambda: return abs(x);
    update_interval: 60s

  # NTC Temperature
  - platform: ntc
    sensor: temp_resistance_reading
    name: ${friendly_name} Temperature
    unit_of_measurement: 'Â°C'
    accuracy_decimals: 1
    icon: 'mdi:thermometer'
    calibration:
      b_constant: 3350
      reference_resistance: 10kOhm
      reference_temperature: 298.15K
  - platform: resistance
    id: temp_resistance_reading
    sensor: temp_analog_reading
    configuration: DOWNSTREAM
    resistor: 32kOhm
  - platform: adc
    id: temp_analog_reading
    pin: A0

status_led:
  pin:
    number: GPIO0
    inverted: true

output:
  - platform: gpio
    pin: GPIO4
    id: relay_1
  - platform: gpio
    pin: GPIO15
    id: relay_2

light:
  - platform: binary
    name: '${friendly_name} Light'
    output: relay_1
    id: light_1

fan:
  - platform: binary
    name: '${friendly_name} Fan'
    output: relay_2
    id: fan_1

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO13
    name: '${friendly_name} Light Switch'
    on_state:
      then:
        - light.toggle: light_1
    internal: true
    id: switch_1
  - platform: gpio
    pin:
      number: GPIO5
    name: '${friendly_name} Fan Switch'
    on_state:
      then:
        - fan.toggle: fan_1
    internal: true
    id: switch_2
